name: C/C++ CI

# mv build/Release/SDL2.dll ./
# cp "${MINGW_PREFIX}/bin/libgcc_s_seh-1.dll" ./
#         cp "${MINGW_PREFIX}/bin/libstdc++-6.dll" ./
#         cp "${MINGW_PREFIX}/bin/libwinpthread-1.dll" ./
#         cp "${MINGW_PREFIX}/bin/libavif-16.dll" ./
#         cp "${MINGW_PREFIX}/bin/libjpeg-8.dll" ./
#         cp "${MINGW_PREFIX}/bin/libjxl.dll" ./

# libgcc_s_seh-1.dll
#           libstdc++-6.dll
#           libwinpthread-1.dll
#           libavif-16.dll
#           libjpeg-8.dll
#           libjxl.dll

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-mingw64:
    runs-on: windows-2022

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: mingw32
        install: >-
          mingw-w64-i686-toolchain
          mingw-w64-i686-SDL2
          mingw-w64-i686-SDL2_image
          make
          zip
    - name: Test SDL installation
      run: |
        pkg-config sdl2 --cflags
    - name: Generate Build Configuration (Premake)
      run: ./create-makefile-windows.bat
    - name: Build Tool (make)
      run: make config=release
    - name: Zip files into artifact
      run: |
        mv build/Release/ez-stream-tool ./
        echo "${MINGW_PREFIX}/bin/SDL2.dll"
        cp "${MINGW_PREFIX}/bin/SDL2.dll" ./
        cp "${MINGW_PREFIX}/bin/SDL2_image.dll" ./
    - name: Add artifact to Actions run
      uses: actions/upload-artifact@v4
      with:
        name: build-windows
        path: |
          ez-stream-tool.exe
          SDL2.dll
          SDL2_image.dll
          overlay.html
          res

  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install Dependencies
      run: |
        sudo apt-get install build-essential libsdl2-dev libsdl2-image-dev
    - name: Test SDL installation
      run: |
        sdl2-config --cflags
    - name: Generate Build Configuration (Premake)
      run: ./create-makefile-unix.sh
    - name: Build Tool (make)
      run: make config=release
    - name: Zip files into artifact
      run: |
        mv build/Release/ez-stream-tool ./
    - name: Add artifact to Actions run
      uses: actions/upload-artifact@v4
      with:
        name: build-linux
        path: |
          ez-stream-tool
          overlay.html
          res
